# # services:
# #   web:
# #     build: .
# #     command: gunicorn jobboard.wsgi:application --bind 0.0.0.0:8000
# #     volumes:
# #       - .:/code:delegated   # add :delegated for performance
# #     ports:
# #       - "8000:8000"
# #     env_file:
# #       - .env
# #     user: "1000:1000"       # match host user ID if needed
# #     depends_on:
# #       db:
# #         condition: service_healthy
# #       rabbitmq:
# #         condition: service_healthy
# #       redis:
# #         condition: service_started

# #   celery:
# #     build: .
# #     command: celery -A jobboard worker -l info
# #     env_file:
# #       - .env
# #     volumes:
# #       - .:/code:delegated   #  mount with same permissions
# #     user: "1000:1000"       # run as non-root
# #     depends_on:
# #       db:
# #         condition: service_healthy
# #       rabbitmq:
# #         condition: service_healthy
# #       redis:
# #         condition: service_started
# #       web:
# #         condition: service_started


# #   db:
# #     image: postgres:14
# #     environment:
# #       POSTGRES_DB: jobboard
# #       POSTGRES_USER: jobboard_user
# #       POSTGRES_PASSWORD: changeme
# #     volumes:
# #       - postgres_data:/var/lib/postgresql/data
# #     healthcheck:
# #       test: ["CMD-SHELL", "pg_isready -U jobboard_user -d jobboard"]
# #       interval: 10s
# #       timeout: 5s
# #       retries: 5

# #   redis:
# #     image: redis:7
# #     ports:
# #       - "6379:6379"

# #   rabbitmq:
# #     image: rabbitmq:3.13-management
# #     ports:
# #       - "5672:5672"
# #       - "15672:15672"
# #     healthcheck:
# #       test: ["CMD", "rabbitmq-diagnostics", "ping"]
# #       interval: 10s
# #       timeout: 5s
# #       retries: 5

# # volumes:
# #   postgres_data:
# version: "3.8"

# services:
#   web:
#     build: .
#     command: /code/entrypoint.sh gunicorn jobboard.wsgi:application --bind 0.0.0.0:8000 --workers 3
#     volumes:
#       - .:/code:delegated
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     user: "1000:1000"  # match host user ID if needed
#     depends_on:
#       db:
#         condition: service_healthy
#       rabbitmq:
#         condition: service_healthy
#       redis:
#         condition: service_started

#   celery:
#     build: .
#     command: /code/entrypoint.sh celery -A jobboard worker -l info
#     env_file:
#       - .env
#     volumes:
#       - .:/code:delegated
#     user: "1000:1000"
#     depends_on:
#       db:
#         condition: service_healthy
#       rabbitmq:
#         condition: service_healthy
#       redis:
#         condition: service_started
#       web:
#         condition: service_started

#   db:
#     image: postgres:14
#     environment:
#       POSTGRES_DB: jobboard
#       POSTGRES_USER: jobboard_user
#       POSTGRES_PASSWORD: changeme
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U jobboard_user -d jobboard"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   redis:
#     image: redis:7
#     ports:
#       - "6379:6379"

#   rabbitmq:
#     image: rabbitmq:3.13-management
#     ports:
#       - "5672:5672"
#       - "15672:15672"  # management UI
#     healthcheck:
#       test: ["CMD", "rabbitmq-diagnostics", "ping"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

# volumes:
#   postgres_data:

services:
  web:
    build: .
    command: /code/entrypoint.sh gunicorn jobboard.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - .:/code:delegated   # mount source with performance hint
    ports:
      - "8000:8000"
    env_file:
      - .env
    user: "1000:1000"       # match host user ID if needed
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    command: /code/entrypoint.sh celery -A jobboard worker -l info
    env_file:
      - .env
    volumes:
      - .:/code:delegated
    user: "1000:1000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started

  db:
    image: postgres:14
    environment:
      POSTGRES_DB: jobboard
      POSTGRES_USER: jobboard_user
      POSTGRES_PASSWORD: changeme
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobboard_user -d jobboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
